{"version":3,"sources":["imgs/logo.svg","pages/Home.js","imgs/logo_line.svg","components/Header.js","widgets/widgets.js","components/SearchForm.js","imgs/noresult.svg","components/SearchNoResult.js","components/SearchRouteResult.js","components/SearchRoute.js","apis/api.js","pages/Routes.js","components/SearchStopResult.js","components/SearchStop.js","pages/Stops.js","pages/NearBy.js","App.js","index.js"],"names":["Home","id","className","src","logo","width","alt","href","process","Header","page","window","location","split","activeClass","term","cities","N1Cities","searchHolders","Bearings","getEstimateTime","est","trans","diff","Date","parse","Math","round","SearchForm","Placeholder","handleFetchList","handleOptionLists","handleSubmitToQuery","handleCheckTermInBus","cities_options","Object","keys","map","city","value","useState","City","setCity","setTerm","buses","setBuses","fetchBus","newTerm","a","newBuses","debouncedFetchBus","useCallback","func","timer","timeout","args","clearTimeout","setTimeout","apply","debounce","method","onSubmit","e","form","document","querySelector","appendID","submit","preventDefault","onChange","target","required","name","disabled","select","list","autoComplete","placeholder","input","hidden","type","SearchNoResult","noresult","mapboxgl","accessToken","SearchRouteResult","results","destination","positions","routes","nowDirection","setDirection","init","setInit","query","URLSearchParams","search","get","mapContainer","React","createRef","createMarker","position","text","ele","createElement","current","Marker","setLngLat","setPopup","Popup","offset","setHTML","addTo","useEffect","newInitState","center","length","Map","container","style","StopPosition","lon","lat","sprite","zoom","pastRoute","remove","route","stop","routeSource","layerProperty","on","addSource","addLayer","fitBounds","setupRoute","querySelectorAll","forEach","m","station","BusPosition","PlateNumb","setupAllMarkers","handleButtonOnClick","dir","btn","classList","add","onClick","idx","EstimateTime","StopName","Zh_tw","ref","height","padding","SearchRoute","handleFetchResult","handleFetchMapPositions","handleFetchRouteStops","result","setResult","setDestination","setPositions","setRoutes","OutputAndDrawMap","RouteID","then","response","r","c","setInterval","clearInterval","axios","create","baseURL","headers","GMTString","toGMTString","ShaObj","jsSHA","setHMACKey","update","getHMAC","GetAuthorizationHeader","Routes","fetchPositions","indexOf","api","data","s","Direction","PositionLon","PositionLat","d0","filter","d1","fetchStationsForMap","R0","R1","s0","s1","Stops","fetchResults","removeDuplicate","arr","item","splice","getPreciseTime","EstimateTimeOfArrival","time","SrcTransTime","row","d0_dest","d1_dest","fetchBuses","RouteName","responses","Set","JSON","stringify","fs","bus","index","setAttribute","appendChild","SearchStopResult","EstimatedTimeOfArrival","SearchStop","Result","SetResult","OutputResult","StationID","res","datas","C","S","fetchStation","StationName","Bearing","StationAddress","StopID","stops","qq","rid","sid","waiting","stations","trim","diffCenterToPoint","x","y","lat1","lat2","lon1","lon2","deg2rad","deg","PI","dLat","dLon","sin","cos","atan2","sqrt","NearBy","useRef","setLocation","setResults","inited","setInited","setupMap","setupCenter","getStations","q","StationPosition","Distance","ss","sort","b","nearestStops","storePosition","coords","latitude","longitude","display","navigator","geolocation","watchPosition","err","console","log","getLocation","title","App","basename","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.4f218f67.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6bae1ae4.svg\";","import React from \"react\";\r\nimport logo from '../imgs/logo.svg';\r\nimport '../css/home.css';\r\n\r\nconst Home = () => {\r\n    return (\r\n        <main>\r\n            <h1 id='home-heading'>\r\n                <span>\r\n                    <span>蛙蛙搭車 GO</span>\r\n                    <span className='subtitle'>Where can I take this bus?</span>\r\n                </span>\r\n                <img src={logo} width='140' alt='蛙蛙搭車Go logo' />\r\n            </h1>\r\n            <ul className=\"home-tab\">\r\n                <li>\r\n                    <span>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/routes`}>找路線</a>\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <span>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/stops`}>找站牌</a>\r\n                    </span>\r\n                </li>\r\n                <li>\r\n                    <span>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/nearby`}>附近車站</a>\r\n                    </span>\r\n                </li>\r\n            </ul>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Home;","export default __webpack_public_path__ + \"static/media/logo_line.acdb01dd.svg\";","import React from \"react\";\r\nimport '../css/header.css';\r\nimport logo from '../imgs/logo_line.svg';\r\n\r\nconst Header = () => {\r\n    // set active to current page in tab.\r\n    const url = window.location.href;\r\n    const page = url.split('#/')[1];    \r\n    const activeClass = (term) => (page === term) ? \"active\" : '';\r\n\r\n    return (\r\n        <header>\r\n            <nav>\r\n                <ul>\r\n                    <li className={activeClass('routes')}>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/routes`}>找路線</a>\r\n                    </li>\r\n                    <li className={activeClass('stops')}>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/stops`}>找站牌</a>\r\n                    </li>\r\n                    <li className={activeClass('nearby')}>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/nearby`}>附近車站</a>\r\n                    </li>\r\n                    <li>\r\n                        <a href={`${process.env.PUBLIC_URL}/#/`}>回首頁</a>\r\n                    </li>\r\n                </ul>\r\n            </nav>\r\n            <h1 className=\"h1-logo\">\r\n                <a href={`${process.env.PUBLIC_URL}/#/`}>\r\n                    <img src={logo} width=\"100\" />\r\n                    <span>蛙蛙搭車 Go</span>\r\n                </a>\r\n            </h1>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","const cities = {\r\n    \"臺北市\":\"Taipei\",\r\n    \"新北市\":\"NewTaipei\",\r\n    \"桃園市\":\"Taoyuan\",\r\n    \"臺中市\":\"Taichung\",\r\n    \"臺南市\":\"Tainan\",\r\n    \"高雄市\":\"Kaohsiung\",\r\n    \"新竹市\":\"Hsinchu\",\r\n    \"新竹縣\":\"HsinchuCounty\",\r\n    \"苗栗縣\":\"MiaoliCounty\",\r\n    \"彰化縣\":\"ChanghuaCounty\",\r\n    \"南投縣\":\"NantouCounty\",\r\n    \"雲林縣\":\"YunlinCounty\",\r\n    \"嘉義縣\":\"ChiayiCounty\",\r\n    \"嘉義市\":\"Chiayi\",\r\n    \"屏東縣\":\"PingtungCounty\",\r\n    \"宜蘭縣\":\"YilanCounty\",\r\n    \"花蓮縣\":\"HualienCounty\",\r\n    \"臺東縣\":\"TaitungCounty\",\r\n    \"金門縣\":\"KinmenCounty\",\r\n    \"澎湖縣\":\"PenghuCounty\",\r\n};\r\n\r\nconst N1Cities = [\r\n    \"Hsinchu\",\r\n    \"HsinchuCounty\",\r\n    \"MiaoliCounty\",\r\n    \"ChanghuaCounty\",\r\n    \"NantouCounty\",\r\n    \"YunlinCounty\",\r\n    \"ChiayiCounty\",\r\n    \"Chiayi\",\r\n    \"PingtungCounty\",\r\n    \"YilanCounty\",\r\n    \"HualienCounty\",\r\n    \"TaitungCounty\",\r\n    \"PenghuCounty\",\r\n];\r\n\r\nfunction debounce (func, timeout=300) {\r\n    let timer;\r\n    return (...args) => {\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => { func.apply(this, args); }, timeout);\r\n    };\r\n}\r\n\r\nconst searchHolders = {\r\n    'routes': \"請輸入欲查詢公車\",\r\n    'stops':  \"請輸入欲查詢站牌名\",\r\n    'select': '縣市',\r\n}\r\n\r\nconst Bearings = {\r\n    'E' : '東行',\r\n    'W' : '西行',\r\n    'S' : '南行',\r\n    'N' : '北行',\r\n    'SE': \"東南行\",\r\n    'NE': \"東北行\",\r\n    'SW': \"西南行\",\r\n    'NW': \"西北行\",\r\n};\r\n\r\nconst getEstimateTime = (est, trans) => {\r\n    const now = new Date();\r\n    const newTrans = Date.parse(trans);\r\n    const diff = (now - newTrans) / 1000 ;\r\n    return Math.round( (est - diff) / 60 );\r\n}\r\n\r\nconst REFRESH_TIME = 30 * 1000;\r\n\r\nexport { cities, debounce, searchHolders, N1Cities, Bearings, getEstimateTime, REFRESH_TIME };","import React, { useState, useCallback } from \"react\";\r\nimport { cities, debounce } from \"../widgets/widgets\";\r\nimport '../css/form.css';\r\n\r\nconst SearchForm = ({ Placeholder, handleFetchList, handleOptionLists, handleSubmitToQuery, handleCheckTermInBus }) => {\r\n    const cities_options = Object.keys(cities).map((city) => \r\n                                <option value={cities[city]} key={cities[city]}>{city}</option>);\r\n\r\n    const [City, setCity] = useState('');\r\n    const [term, setTerm]   = useState('');\r\n    const [buses, setBuses] = useState([]);\r\n\r\n    const fetchBus = async (City, newTerm) => {\r\n        let newBuses = [];\r\n\r\n        if (newTerm !== \"\" && newTerm !== null) {\r\n            newBuses = await handleFetchList(City, newTerm);\r\n        }\r\n\r\n        setBuses(newBuses);\r\n    }\r\n\r\n    const debouncedFetchBus = useCallback(debounce((City, term) => fetchBus(City, term)), []); \r\n\r\n    const processChange = e => {\r\n        const newTerm = e.target.value;\r\n        setTerm(newTerm);\r\n\r\n        if (!handleCheckTermInBus(buses, newTerm)) {\r\n            debouncedFetchBus(City, newTerm);\r\n        }\r\n    };\r\n\r\n    const checkValInList = e => {\r\n        const form = document.querySelector('#form');\r\n        const appendID = handleCheckTermInBus(buses, term);\r\n\r\n        if (appendID !== false) {\r\n            handleSubmitToQuery(form, appendID);\r\n            form.submit();\r\n        }\r\n\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleSelectChange = (e) => {\r\n        setCity(e.target.value);\r\n        setTerm('');\r\n        setBuses([]);\r\n    }\r\n\r\n    return (\r\n        <form method=\"get\" onSubmit={checkValInList} id='form'>\r\n            <select value={City} \r\n                    onChange={handleSelectChange} \r\n                    required\r\n                    name=\"City\"\r\n            >\r\n                <option disabled value=\"\">{Placeholder.select}</option>\r\n                { cities_options }\r\n            </select>\r\n            \r\n            <input  list='list-buses' \r\n                    autoComplete=\"off\"\r\n                    placeholder={Placeholder.input}\r\n                    value={term}\r\n                    onChange={processChange}\r\n                    hidden={!City} \r\n                    required />\r\n\r\n            <datalist id=\"list-buses\">\r\n                { handleOptionLists(buses) }\r\n            </datalist>\r\n            \r\n            <button type=\"submit\">\r\n                <i className=\"fa fa-search\" aria-hidden=\"true\"></i>\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default SearchForm;","export default __webpack_public_path__ + \"static/media/noresult.c4e17f58.svg\";","import React from \"react\";\r\nimport noresult from '../imgs/noresult.svg';\r\nimport '../css/noresult.css';\r\n\r\nconst SearchNoResult = () => {\r\n    return (\r\n        <div className='noresult'>\r\n            <img src={noresult} width=\"300\" alt=\"no result.\" />\r\n            <p>沒有結果。</p>\r\n            <small>部分縣市無法提供結果，請先確認您搜索的縣市是否在指定範圍內。</small>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchNoResult;","import React, { useEffect, useState } from \"react\";\r\nimport SearchNoResult from \"./SearchNoResult\";\r\nimport mapboxgl from \"mapbox-gl\";\r\n\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\r\n\r\nconst SearchRouteResult = ({ results, destination, positions, routes }) => {\r\n    const [nowDirection, setDirection] = useState(0);\r\n    const [init, setInit] = useState(true);\r\n\r\n    const query = new URLSearchParams(window.location.search).get('City');\r\n\r\n    const mapContainer = React.createRef();\r\n    const map = React.createRef();\r\n\r\n    const createMarker = (type, position, text) => {\r\n        const ele = document.createElement('div');\r\n        ele.className = type;\r\n\r\n        if (map.current) {\r\n            new mapboxgl.Marker(ele)\r\n                .setLngLat(position)\r\n                .setPopup(\r\n                    new mapboxgl.Popup({ offset: 20 }).setHTML(text)\r\n                )\r\n                .addTo(map.current);\r\n        }\r\n    };\r\n\r\n    const setupMap = (center) => {\r\n        if (map.current) return ;\r\n\r\n        // create map\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/tn-o/ckweg9qi6094515mv8bt3mdil',\r\n            center: [center.StopPosition.lon, center.StopPosition.lat],\r\n            sprite: \"mapbox://sprites/mapbox/streets-v9\",\r\n            zoom: 13,\r\n        });    \r\n    };\r\n\r\n    const setupRoute = () => {\r\n        // clear past route\r\n        const pastRoute = document.querySelector('#routepath');\r\n        if (pastRoute) { pastRoute.remove(); }\r\n\r\n        // draw bus route\r\n        const route = routes[nowDirection].map(stop => [stop.StopPosition.lon, stop.StopPosition.lat]);\r\n        const routeSource = {\r\n            'type': 'geojson',\r\n            'data': {\r\n                'type': 'Feature',\r\n                'properties': {},\r\n                'geometry': {\r\n                    'type': 'LineString',\r\n                    'coordinates': route \r\n                }\r\n            }\r\n        };\r\n        const layerProperty = {\r\n            'id': 'routepath',\r\n            'type': 'line',\r\n            'source': 'route',\r\n            'layout': {\r\n                'line-join': 'round',\r\n                'line-cap': 'round'\r\n            },\r\n            'paint': {\r\n                'line-color': '#77B441',\r\n                'line-width': 7\r\n            }\r\n        };\r\n        map.current.on('load', () => {\r\n            map.current.addSource('route', routeSource);\r\n            map.current.addLayer(layerProperty);\r\n            map.current.fitBounds([\r\n                route[0], // southwestern corner of the bounds\r\n                route[ route.length - 1 ] // northeastern corner of the bounds\r\n            ]);\r\n        });\r\n    };\r\n\r\n    const setupAllMarkers = () => {\r\n        // clear all markers first\r\n        const clearAllMarkers = () => {\r\n            const markers = document.querySelectorAll('.busMarker');\r\n            markers.forEach(m => m.remove());\r\n        };\r\n        clearAllMarkers();\r\n\r\n        // create nearby stops markers\r\n        for (const station of positions[nowDirection]) {\r\n            const position = [station.BusPosition.lon, station.BusPosition.lat];\r\n            const text = `${station.PlateNumb}`;\r\n            createMarker('busMarker', position, text);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        let newInitState = init;\r\n\r\n        if (routes[0].length > 0 || routes[1].length > 0) { \r\n            newInitState = false;\r\n            setInit(newInitState);\r\n        }\r\n\r\n        if (!newInitState && results[0].length > 0 && results[1].length > 0) {\r\n            setupMap(routes[0][0])\r\n            setupRoute();\r\n            setupAllMarkers();\r\n        }\r\n    }, [positions, nowDirection]);\r\n\r\n    const handleButtonOnClick = (dir) => {\r\n        const btns = document.querySelectorAll('.btn-direction');\r\n        btns.forEach(btn => { btn.classList.remove('btn-dir-active'); })\r\n\r\n        document.querySelector(`.btn-dir-${dir}`).classList.add('btn-dir-active');\r\n        \r\n        setDirection(dir);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <section className='result-container'>\r\n                <div className='btns-list'>\r\n                    { results[0].length > 0 &&  <button onClick={e => handleButtonOnClick(0)} className='btn-direction btn-dir-0 btn-dir-active'>\r\n                                                    往 {destination[0]}\r\n                                                </button> \r\n                    }\r\n                    { results[1].length > 0 &&  <button onClick={e => handleButtonOnClick(1)} className='btn-direction btn-dir-1'>\r\n                                                    往 {destination[1]}\r\n                                                </button> \r\n                    }\r\n                </div>\r\n                <ol className='result-list routes-list'>\r\n                    {   \r\n                        results[nowDirection].map((stop,idx) => {\r\n                            return  <li key={idx}> \r\n                                        <span>{stop.EstimateTime}</span>\r\n                                        <span>{stop.StopName.Zh_tw}</span>\r\n                                    </li>\r\n                        })\r\n                    }\r\n                </ol>\r\n                { results[0].length > 0 && results[1].length > 0 ?\r\n                    <div ref={mapContainer} style={{ height : '350px' }} className=\"mapContainer\"></div> : null\r\n                }\r\n            </section>\r\n            { query && results[0].length === 0 && results[1].length === 0 ? \r\n                <section style={{ padding: '0 5vh' }} ><SearchNoResult /></section>\r\n                : null \r\n            }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchRouteResult;","import React, { useState, useEffect } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport SearchRouteResult from \"./SearchRouteResult\";\r\nimport { REFRESH_TIME } from \"../widgets/widgets\";\r\n\r\nconst SearchRoute = ({ Placeholder,\r\n                       handleFetchList,\r\n                       handleFetchResult,\r\n                       handleOptionLists,\r\n                       handleSubmitToQuery,\r\n                       handleCheckTermInBus,\r\n                       handleFetchMapPositions,\r\n                       handleFetchRouteStops,\r\n                    }) => {\r\n    const [result, setResult] = useState([[], []]);\r\n    const [destination, setDestination] = useState([\"\", \"\"]);\r\n    const [positions, setPositions] = useState([[], []]);\r\n    const [routes, setRoutes] = useState([[], []]);\r\n\r\n    const OutputAndDrawMap = (City, RouteID) => {\r\n        handleFetchResult(City, RouteID).then(response => {\r\n            setResult(response.results);\r\n            setDestination(response.destination);\r\n        });\r\n\r\n        handleFetchRouteStops(City, RouteID).then(routes => {\r\n            setRoutes(routes);\r\n        });\r\n\r\n        handleFetchMapPositions(City, RouteID).then(response => {\r\n            setPositions(response);\r\n        });    \r\n    };\r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(window.location.search);\r\n        const r = query.get('RouteID');\r\n        const c = query.get('City');\r\n\r\n        OutputAndDrawMap(c, r);\r\n\r\n        const timer = setInterval(() => {\r\n            OutputAndDrawMap(c, r);\r\n        }, REFRESH_TIME);\r\n\r\n        return () => clearInterval(timer);\r\n    }, [])\r\n\r\n    return (\r\n        <section className='routes'>\r\n            <SearchForm   Placeholder={Placeholder} \r\n                          handleFetchList={handleFetchList}\r\n                          handleSubmitToQuery={handleSubmitToQuery} \r\n                          handleOptionLists={handleOptionLists} \r\n                          handleCheckTermInBus={handleCheckTermInBus} />\r\n            <SearchRouteResult results={result} \r\n                               destination={destination} \r\n                               positions={positions} \r\n                               routes={routes} />\r\n        </section>\r\n    );\r\n};\r\n\r\nexport default SearchRoute;","import jsSHA from \"jssha\";\r\nimport axios from \"axios\";\r\n\r\nfunction GetAuthorizationHeader() {\r\n    const AppID  = process.env.REACT_APP_ID;\r\n    const AppKey = process.env.REACT_APP_KEY;\r\n\r\n    const GMTString = new Date().toGMTString();\r\n    const ShaObj = new jsSHA('SHA-1', 'TEXT');\r\n    ShaObj.setHMACKey(AppKey, 'TEXT');\r\n    ShaObj.update('x-date: ' + GMTString);\r\n\r\n    const HMAC = ShaObj.getHMAC('B64');\r\n    const Authorization = 'hmac username=\"' + AppID + '\", algorithm=\"hmac-sha1\", headers=\"x-date\", signature=\"' + HMAC + '\"';\r\n\r\n    return {'Authorization': Authorization, 'X-Date': GMTString}; \r\n}\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://ptx.transportdata.tw/MOTC/v2/Bus/',\r\n    timeout: 1000,\r\n    headers: GetAuthorizationHeader()\r\n});","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport SearchRoute from \"../components/SearchRoute\";\r\nimport { searchHolders, N1Cities, getEstimateTime } from \"../widgets/widgets\";\r\nimport api from \"../apis/api\";\r\nimport '../css/routes.css';\r\n\r\nconst Routes = () => {\r\n    const fetchPositions = async (City, RouteID) => {\r\n        let positions = [[], []];\r\n\r\n        // A1: {City} should be in N1Cities array too.\r\n        if (N1Cities.indexOf(City) > -1) {\r\n            const query = `RealTimeByFrequency/Streaming/City/${City}?$filter=RouteID eq '${RouteID}'&$top=10&$format=JSON`;\r\n            const result = await api.get(query);\r\n\r\n            if (!result.data) { return positions; }\r\n\r\n            const s = result.data.map(data => ({PlateNumb: data.PlateNumb, \r\n                                                Direction: data.Direction, \r\n                                                BusPosition: { lon : data.BusPosition.PositionLon, lat : data.BusPosition.PositionLat } }) );\r\n            const d0 = s.filter(data => data.Direction === 0);\r\n            const d1 = s.filter(data => data.Direction === 1);\r\n\r\n            positions = [d0, d1];\r\n        }\r\n\r\n        return positions;\r\n    };\r\n\r\n    const fetchStationsForMap = async (City, RouteID) => {\r\n        let routes = [[], []];\r\n        \r\n        // A1: {City} should be in N1Cities array too.\r\n        if (N1Cities.indexOf(City) > -1) {\r\n            const query = `StopOfRoute/City/${City}?$filter=RouteID eq '${RouteID}'&$format=JSON`;\r\n            const response = await api.get(query);\r\n\r\n            if (!response.data) { return routes; }\r\n\r\n            const R0 = response.data.filter(route => route.Direction === 0 )[0];\r\n            const R1 = response.data.filter(route => route.Direction === 1 )[0];\r\n\r\n            let s0 = [], s1 = [];\r\n\r\n            if (R0) {\r\n                s0 = R0.Stops.map(stop => ({ StopName: stop.StopName.Zh_tw, \r\n                                              StopPosition: {lon: stop.StopPosition.PositionLon, lat: stop.StopPosition.PositionLat} }) );\r\n            }\r\n            if (R1) { \r\n                s1 = R1.Stops.map(stop => ({ StopName: stop.StopName.Zh_tw, \r\n                                               StopPosition: {lon: stop.StopPosition.PositionLon, lat: stop.StopPosition.PositionLat} }) );\r\n            }\r\n            routes = [s0, s1];\r\n        }\r\n\r\n        return routes;\r\n    };\r\n\r\n    const fetchResults = async (City, RouteID) => {\r\n        let results = [[], []];\r\n        let destination = [\"\", \"\"];\r\n        \r\n        // N1: {City} should be in N1Cities array. \r\n        if (N1Cities.indexOf(City) > -1) {\r\n            const query = `EstimatedTimeOfArrival/Streaming/City/${City}?$filter=RouteID eq '${RouteID}'&$orderby=StopSequence&$top=200&$format=JSON`;\r\n            results = await api.get(query);\r\n\r\n            // N1 data will return duplicated datas, so we need to remove them.\r\n            const removeDuplicate = function(arr) {\r\n                arr.forEach((item, idx) => {\r\n                    const next = arr[ (idx+1) % arr.length ];\r\n                    if (next.id === item.id) {\r\n                        arr.splice(idx+1, 1);\r\n                    }\r\n                })                \r\n                return arr;\r\n            };\r\n\r\n            // subtract time error when transferring data.\r\n            const getPreciseTime = function(arr) {\r\n                const EstimateTimeOfArrival = (item) => {\r\n                    if (!item.EstimateTime) { return '尚未發車'; }\r\n\r\n                    const time = getEstimateTime(item.EstimateTime, item.SrcTransTime);\r\n                    \r\n                    if (time <= 2) { return '即將到站'; }\r\n                    return `${time} mins`;\r\n                };\r\n\r\n                return arr.map(item => {    \r\n                    return ({ ...item, EstimateTime: EstimateTimeOfArrival(item) });\r\n                });\r\n            };\r\n\r\n            let d0 = [...results.data].filter(row => row.Direction === 0);\r\n            d0 = removeDuplicate(d0);\r\n            d0 = getPreciseTime(d0);\r\n            \r\n            let d1 = [...results.data].filter(row => row.Direction === 1);\r\n            d1 = removeDuplicate(d1);\r\n            d1 = getPreciseTime(d1);\r\n\r\n            results = [d0, d1];\r\n\r\n            const d0_dest = d0.length > 0 ? d0[d0.length - 1].StopName.Zh_tw : \"\";\r\n            const d1_dest = d1.length > 0 ? d1[d1.length - 1].StopName.Zh_tw : \"\";\r\n            \r\n            destination = [d0_dest, d1_dest];\r\n        }\r\n        \r\n        return { results: results, destination: destination };\r\n    };\r\n\r\n    const fetchBuses = async (City, RouteName) => {\r\n        const query = `StopOfRoute/City/${City}/${RouteName}?$top=20&$format=JSON`;\r\n        const responses = await api.get(query);\r\n        \r\n        const s = new Set(responses.data.map(item => \r\n                            (JSON.stringify({RouteID: item.RouteID, RouteName: item.RouteName.Zh_tw}))\r\n                        ));\r\n        const fs = [...s].map(item => JSON.parse(item));\r\n\r\n        return fs;\r\n    };\r\n\r\n    const handleSubmitToQuery = (form, RouteID) => {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'hidden');\r\n        input.setAttribute('name', 'RouteID');\r\n        input.setAttribute('value', RouteID);\r\n        form.appendChild(input);\r\n    };\r\n\r\n    const handleOptionLists = (arr) => {\r\n        return arr.map((bus,index) => { \r\n            return <option value={bus.RouteName}  data-routeid={bus.RouteID} key={index} />;\r\n        });\r\n    };\r\n\r\n    const findTermInBuses = (buses, term) => {\r\n        const bus = buses.filter(bus => bus.RouteName === term);\r\n\r\n        if (bus.length > 0) {\r\n            return bus[0].RouteID;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <SearchRoute Placeholder={{ \"select\" : searchHolders.select, \"input\" : searchHolders.routes }}\r\n                         handleFetchList={fetchBuses} \r\n                         handleOptionLists={handleOptionLists}\r\n                         handleCheckTermInBus={findTermInBuses}\r\n                         handleSubmitToQuery={handleSubmitToQuery} \r\n                         handleFetchResult={fetchResults} \r\n                         handleFetchMapPositions={fetchPositions}\r\n                         handleFetchRouteStops={fetchStationsForMap}\r\n            />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Routes;","import React from \"react\";\r\nimport SearchNoResult from \"./SearchNoResult\";\r\n\r\nconst SearchStopResult = ({ results }) => {\r\n    const query = new URLSearchParams(window.location.search).get('City');\r\n\r\n    return (\r\n        <>\r\n            <section className='result-container'>\r\n                <ul className='result-list stop-list'>\r\n                    { results.map((bus, idx) => \r\n                        <li key={idx}>\r\n                            <span>{bus.RouteName} </span>\r\n                            <span> - {bus.EstimateTime} </span> \r\n                        </li>) \r\n                    }\r\n                </ul>\r\n            </section>\r\n            { query && results.length === 0 ? <SearchNoResult /> : null }\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchStopResult;","import React, { useState, useEffect } from \"react\";\r\nimport { getEstimateTime, REFRESH_TIME } from \"../widgets/widgets\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport SearchStopResult from \"./SearchStopResult\";\r\n\r\nconst EstimatedTimeOfArrival = (data) => {\r\n    if (!data.EstimateTime) return \"尚未發車\";\r\n    if (data.EstimateTime < 2) return \"即將進站\";\r\n    return `還有 ${getEstimateTime(data.EstimateTime, data.SrcTransTime)} 分鐘進站`;\r\n};\r\n\r\nconst SearchStop = ({ Placeholder, handleFetchList, handleOptionLists, handleCheckTermInBus, handleSubmitToQuery, handleFetchResult }) => {\r\n    const [Result, SetResult] = useState([]);\r\n\r\n    const OutputResult = (City, StationID) => {\r\n        handleFetchResult(City, StationID).then(res => {\r\n            const datas = res.data;\r\n            \r\n            if (datas.length > 0) {\r\n                const buses = datas.map(data => ({ RouteName: data.RouteName.Zh_tw, \r\n                                                   EstimateTime: EstimatedTimeOfArrival(data) }) );\r\n                SetResult(buses);\r\n            }  else {\r\n                SetResult([]);\r\n            }\r\n        });\r\n    }; \r\n\r\n    useEffect(() => {\r\n        const query = new URLSearchParams(window.location.search);\r\n        const C = query.get('City');\r\n        const S = query.get('StationID');\r\n\r\n        OutputResult(C, S);\r\n\r\n        const timer = setInterval(() => {\r\n            OutputResult(C, S);\r\n        }, REFRESH_TIME);\r\n\r\n        return () => clearInterval(timer);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <SearchForm   Placeholder={Placeholder} \r\n                          handleFetchList={handleFetchList} \r\n                          handleOptionLists={handleOptionLists} \r\n                          handleCheckTermInBus={handleCheckTermInBus} \r\n                          handleSubmitToQuery={handleSubmitToQuery} />\r\n            <SearchStopResult  results={Result} />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SearchStop;","import React from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport api from \"../apis/api\";\r\nimport SearchStop from \"../components/SearchStop\";\r\nimport { searchHolders, Bearings, N1Cities } from \"../widgets/widgets\";\r\nimport '../css/stop.css';\r\n\r\nconst Stops = () => {\r\n\r\n    const fetchStation = async (City, term) => {\r\n        const query = `Station/City/${City}?$filter=contains(StationName/Zh_tw, '${term}')&$top=20&$format=JSON`;\r\n        const responses = await api.get(query);\r\n\r\n        const s = new Set(responses.data.map(item => \r\n                            (JSON.stringify({ StationID: item.StationID, \r\n                                              StationName: item.StationName.Zh_tw, \r\n                                              Bearing: Bearings[item.Bearing],\r\n                                              StationAddress: item.StationAddress\r\n                                             })) \r\n                        ));\r\n        const fs = [...s].map(item => JSON.parse(item));\r\n\r\n        return fs;\r\n    };\r\n\r\n    const handleOptionLists = (arr) => {\r\n        return arr.map((bus, idx) => {\r\n            if (bus.Bearing) {\r\n                return <option value={`${bus.StationName} [往 ${bus.Bearing}]`}  data-routeid={bus.StationID} key={idx} />;  \r\n            }  else {\r\n                return <option value={`${bus.StationName} [${bus.StationAddress}]`}  data-routeid={bus.StationID} key={idx} />;  \r\n            }\r\n        });\r\n    }\r\n\r\n    const findTermInStations = (stations, term) => {\r\n        const newTerm = term.split('[')[0].trim();\r\n        const station = stations.filter(item => item.StationName === newTerm);\r\n        \r\n        if (station.length > 0) {\r\n            return station[0].StationID;\r\n        }\r\n\r\n        return false;\r\n    };\r\n\r\n    const handleSubmitToQuery = (form, StationID) => {\r\n        const input = document.createElement('input');\r\n        input.setAttribute('type', 'hidden');\r\n        input.setAttribute('name', 'StationID');\r\n        input.setAttribute('value', StationID);\r\n        form.appendChild(input);\r\n    };\r\n\r\n    const fetchResults = async (City, StationID) => {\r\n        // N1: {City} should be in N1Cities array. \r\n        if (N1Cities.indexOf(City) > -1) {\r\n            // get stops:\r\n            const query = `Station/City/${City}?$filter=StationID eq '${StationID}'&$format=JSON`;\r\n            const responses = await api.get(query);\r\n\r\n            if (!responses.data) { return { data: [] }; }\r\n\r\n            const Stops = responses.data[0].Stops;\r\n            const s = new Set(Stops.map(item => {\r\n                        return JSON.stringify({ StopID: item.StopID, RouteID: item.RouteID });\r\n                    }));\r\n\r\n            const stops = [...s].map(item => JSON.parse(item));\r\n\r\n            // get waiting time:\r\n            let qq = `EstimatedTimeOfArrival/Streaming/City/${City}?$format=JSON`;\r\n            stops.forEach((stop, idx) => {\r\n                const rid = stop.RouteID;\r\n                const sid = stop.StopID;\r\n                \r\n                if (idx > 0) {\r\n                    qq += `or (RouteID eq '${rid}' and StopID eq '${sid}') `;\r\n                }  else {\r\n                    qq += `&$filter=(RouteID eq '${rid}' and StopID eq '${sid}') `;\r\n                }\r\n            });\r\n\r\n            const waiting = await api.get(qq);\r\n\r\n            return waiting;\r\n        }  else {\r\n            return { data: [] };\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <section className=\"stop\">\r\n                <SearchStop Placeholder={{ \"select\" : searchHolders.select, \"input\" : searchHolders.stops }}\r\n                            handleFetchList={fetchStation}\r\n                            handleOptionLists={handleOptionLists}\r\n                            handleCheckTermInBus={findTermInStations}\r\n                            handleSubmitToQuery={handleSubmitToQuery}\r\n                            handleFetchResult={fetchResults}\r\n                />\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Stops;","import React, { useState, useEffect, useRef } from \"react\";\r\nimport Header from \"../components/Header\";\r\nimport api from \"../apis/api\";\r\nimport mapboxgl from \"mapbox-gl\";\r\nimport { Bearings } from \"../widgets/widgets\";\r\nimport SearchNoResult from \"../components/SearchNoResult\";\r\nimport '../css/nearby.css';\r\n\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX_TOKEN;\r\n\r\nconst MAX_DIS = 500;\r\nconst MAX_NUM_STOPS = 10;\r\n\r\nconst diffCenterToPoint = (x, y) => {\r\n    const lat1 = x.lat, lat2 = y.PositionLat;\r\n    const lon1 = x.lon, lon2 = y.PositionLon;\r\n    \r\n    const R = 6371;\r\n    const deg2rad = (deg) => deg * (Math.PI / 180);\r\n\r\n    const dLat = deg2rad(lat2 - lat1), dLon = deg2rad(lon2 - lon1);\r\n    const a = Math.sin(dLat/2) * Math.sin(dLat/2) +\r\n            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \r\n            Math.sin(dLon/2) * Math.sin(dLon/2); \r\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));\r\n    return Math.round(R * c * 1000); // distance in km => m\r\n}\r\n\r\nconst NearBy = () => {\r\n    const mapContainer = useRef(null);\r\n    const map = useRef(null);\r\n    \r\n    const [location, setLocation] = useState({ lat: null, lon: null });\r\n    const [results, setResults] = useState([]);\r\n    const [inited, setInited] = useState(false);\r\n\r\n    const getLocation = (e) => {\r\n        const storePosition = async (position) => {\r\n            const { latitude, longitude } = await position.coords;\r\n            setLocation({ lat: latitude, lon: longitude });\r\n        };\r\n\r\n        const errHandle = (err) => {\r\n            console.log('error!');\r\n        };\r\n\r\n        e.target.style.display = 'none';\r\n\r\n        if (navigator.geolocation) {\r\n            navigator.geolocation.watchPosition(storePosition, errHandle);\r\n        }\r\n    };\r\n\r\n    const createMarker = (type, position, text) => {\r\n        const ele = document.createElement('div');\r\n        ele.className = type;\r\n\r\n        if (map.current) {\r\n            new mapboxgl.Marker(ele)\r\n                .setLngLat(position)\r\n                .setPopup(\r\n                    new mapboxgl.Popup({ offset: 20 }).setHTML(text)\r\n                )\r\n                .addTo(map.current);\r\n        }\r\n    };\r\n\r\n    const setupMap = async () => {\r\n        if (map.current) return ;\r\n\r\n        // create map\r\n        map.current = new mapboxgl.Map({\r\n            container: mapContainer.current,\r\n            style: 'mapbox://styles/tn-o/ckweg9qi6094515mv8bt3mdil',\r\n            center: [location.lon, location.lat],\r\n            sprite: \"mapbox://sprites/mapbox/streets-v9\",\r\n            zoom: 15,\r\n        });\r\n\r\n    };\r\n\r\n    const setupCenter = () => {\r\n        // clear last position node\r\n        const center = document.querySelector('.nowPosition');\r\n        if (center) { center.remove(); }\r\n\r\n        // create user's position node\r\n        createMarker('nowPosition', [location.lon, location.lat], '現在位置');\r\n    };\r\n\r\n    const getStations = async ({lat, lon}) => {\r\n        const q = `Station/NearBy/?$spatialFilter=nearby(${lat}, ${lon}, ${MAX_DIS})&$format=JSON`;\r\n        const  response = await api.get(q);\r\n        return response;\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (location.lat === null || location.lon === null) { return ; }\r\n\r\n        if (!inited) {\r\n            setInited(true);\r\n\r\n            setupMap()\r\n                .then(() => setupCenter())\r\n                .then(() => getStations(location))\r\n                .then(res => {\r\n                    const datas = res.data;\r\n                    const stops = datas.map(stop => ({ StationName: stop.StationName.Zh_tw, \r\n                                                    Bearing: Bearings[stop.Bearing], \r\n                                                    StationPosition: stop.StationPosition,\r\n                                                    Distance: diffCenterToPoint(location, stop.StationPosition),\r\n                                                    }));\r\n                    \r\n                    const s = new Set(stops.map(data => JSON.stringify(data)));\r\n                    const ss = [...s].map(data => JSON.parse(data));\r\n\r\n                    ss.sort((a, b) => a.Distance - b.Distance);\r\n                    const nearestStops = ss.splice(0, MAX_NUM_STOPS);\r\n                    setResults(nearestStops);\r\n                });\r\n        }  else {\r\n            setupCenter();\r\n        }\r\n    }, [location]);\r\n\r\n    useEffect(() => {\r\n        if (results.length <= 0) { return ; }\r\n\r\n        // clear all markers first\r\n        const clearAllMarkers = () => {\r\n            const markers = document.querySelectorAll('.marker');\r\n            markers.forEach(m => m.remove());\r\n        };\r\n        clearAllMarkers();\r\n        \r\n        // create nearby stops markers\r\n        for (const station of results) {\r\n            const position = [station.StationPosition.PositionLon, station.StationPosition.PositionLat];\r\n            const text = `${station.StationName} ${station.Bearing}`;\r\n            createMarker('marker', position, text);\r\n        }\r\n    }, [results]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <Header />\r\n            <section className=\"nearby\">\r\n                <button className='btn-getlocation' onClick={e => getLocation(e)} title=\"點我獲取座標\">\r\n                    <i className=\"fa fa-map-marker\" aria-hidden=\"true\"></i>\r\n                </button>\r\n\r\n                { location.lon !== null &&\r\n                    <>\r\n                        <div ref={mapContainer} style={{ height : '350px' }}></div>\r\n                        \r\n                        <section>\r\n                            <ul className='result-list nearby-list'>\r\n                                { results.map((stop, idx) => \r\n                                    <li key={idx}>\r\n                                        <span>{stop.StationName} [{stop.Bearing}] </span> \r\n                                        <span>距離 {stop.Distance} 公尺 </span>\r\n                                    </li>) \r\n                                }\r\n                            </ul>\r\n\r\n                            <small>距離僅供估算，非實際距離。</small>\r\n                        </section>\r\n                    </>\r\n                }\r\n\r\n                { (location.lon !== null && results.length === 0) ? <SearchNoResult /> : null }\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default NearBy;","import React from \"react\";\r\nimport { HashRouter, Switch, Route } from \"react-router-dom\";\r\nimport Home from \"./pages/Home\";\r\nimport Routes from \"./pages/Routes\";\r\nimport Stops from \"./pages/Stops\";\r\nimport NearBy from \"./pages/NearBy\";\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport './css/geomapbox.css';\r\nimport './css/global.css';\r\n\r\nconst App = () => {\r\n    return (\r\n        <HashRouter basename={`${process.env.PUBLIC_URL}`}>\r\n            <Switch>\r\n                <Route path=\"/routes\" component={Routes} />\r\n                <Route path=\"/stops\"  component={Stops} />\r\n                <Route path=\"/nearby\" component={NearBy} />\r\n                <Route exact path=\"/\" component={Home} />\r\n            </Switch>\r\n        </HashRouter>\r\n    );\r\n};\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}